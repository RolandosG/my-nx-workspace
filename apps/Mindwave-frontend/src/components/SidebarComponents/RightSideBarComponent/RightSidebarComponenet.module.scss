// Define your colors and dimensions here
$active-tab-color: #007bff;
$inactive-tab-color: #ccc;
$font-family: 'Arial', sans-serif;
$sidebar-bg-color: #FFFFFF;  // Very light gray for sidebar
$sidebar-bg-color-darker: #FFFFFF;  // A slightly darker gray for contrast
$sidebar-text-color: #333333;  // Dark text for better readability
$sidebar-hover-color: #dddddd;  // Sidebar link hover color similar to link color
$button-bg-color: #007bff;  // Original active tab blue
$button-bg-color-darker: #ff7f00;  // Complementary orange

.rightSidebar {
  font-family: 'Helvetica', 'Arial', sans-serif;
  z-index: 1;
  background: linear-gradient(to bottom, var(--sidebar-bg-color), var(--sidebar-bg-color-darker));
  width: 285px;
  height: 100vh;
  position: fixed;
  top: 10px;
  right: 10px; // Change this to right to place it on the right side
  overflow-y: auto;
  padding: 0;
  transition: all 0.3s;
  border-radius: 10px;
  @media (max-height: 800px) { /* You can adjust the 800px to whatever height you find appropriate */
    height: auto;
  }
  
  .scrollableContent {
    overflow-y: auto;
    max-height: calc(77vh - 0px);
    @media (max-height: 800px) { /* adjust to match the above media query */
      max-height: auto;
    }
     /* width */
  &::-webkit-scrollbar {
    width: 10px;
  }
  
  /* Track */
  &::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 10px;
  }

  /* Handle */
  &::-webkit-scrollbar-thumb {
    background: #888;
    border-radius: 10px;
  }
  
  /* Handle on hover */
  &::-webkit-scrollbar-thumb:hover {
    background: #555;
  }
  }
  
  /* Style your fixed content */
  .fixedContent {
    position: sticky;
    top: 0;
  }
  .tabHeader{
    display: flex;
    flex-wrap: nowrap;
    justify-content: space;
    margin-top: 20px;
    margin-bottom: 40px;
    margin-left: 80px;
    padding: 0px;
    color: $sidebar-text-color;
    .ButtonStyle {
      transform: skew(-12deg);
      color: $sidebar-text-color;
    }
    
    button {
      flex: 1; // make buttons take up equal space
    }
   
  }
  .smallerButton {
   
      font-size: 20px;
      width: 50px;
      height: 25px;
      left: 97px;
  }
  
   .countButton {
      max-width: 1px; // here, 3 is the number of buttons, and 10px is a little gap
      flex: 1; // make buttons take up equal space
    }
  h3 {
    
    font-size: 1.5em;
    margin-bottom: 20px;
    text-align: center;
    text-decoration: underline;
  }
  .commonCardStyle {
    background: linear-gradient(to bottom, var(--sidebar-bg-color), var(--sidebar-bg-color-darker));
    padding: 15px;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    transition: background-color 0.3s ease;
  }
  .momentCard {
    @extend .commonCardStyle;
    color: $sidebar-text-color;
    background: linear-gradient(to bottom, var(--sidebar-bg-color) 0%, var(--sidebar-bg-color) 1%, var(--sidebar-bg-color-darker) 10%, var(--sidebar-bg-color-darker) 90%);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    
    border-bottom: 1px solid #ffffff;  // Separator line
    padding: 15px;
    transition: background-color 0.3s ease;
  
    // Highlight effect when hovered in day mode
    &:hover {
      background-color: darken(#f1f1f1, 10%);  // 10% darker when hovered
    }
  
    // Styles for night mode
    .night & {
      background: #4a4a4a;  // Dark gray background for night mode
  
      // Highlight effect when hovered in night mode
      &:hover {
        background-color: lighten(#4a4a4a, 10%);  // 10% lighter when hovered
      }
    }
    &.dark {
      background-color: #4a4a4a;
      color: #ffffff;
    }
  
    &.light {
      background-color: #ffffff;
      color: #333333;
    }
  }
  .momentHeader,
.momentFooter {
  display: flex;
  justify-content: space-between;
}

.momentHeader {
  margin-bottom: 10px;
}

.momentFooter {
  margin-top: 10px;
}
  .trending-content, .random-content {
    padding: 0px;
    color: $sidebar-text-color;
  }
  ul {
    list-style: none;
    padding: 0;
    text-align: center;
    li {
      font-size: 1.2em;
      padding: 0px 0;
      border-bottom: 1px solid lighten($sidebar-bg-color, 10%);
    }
  }
  select {
    
    margin-bottom: 20px;
    padding: 8px;
    font-size: 1em;
    border: 1px solid lighten($sidebar-bg-color, 10%);
    color: $sidebar-text-color;
  }
  .gridList {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 16px;
    li {
      @extend .commonCardStyle;
      text-align: center;
    }
  }
  .trendingLikes {
    grid-template-columns: 1fr; // 1 column
  }
  .userInfo {
    display: grid;
    grid-template-areas: 
      "userName userLocation"
      "userDescription userDescription"
      "userEmotion userMood"
      "userLikes date";
    grid-gap: 10px;
  }
  
  .userTop {
    display: flex;
    justify-content: space-between;
  }
  
  .userName {
    grid-area: userName;
    font-size: 15px;
    text-decoration: underline;
  }
  
  .date {
    grid-area: date;
    font-size: 14px;
    
  }
  
  .userDescription {
    grid-area: userDescription;
    font-size: 14px;
    text-align: left;
  }
  
  .userEmotion {
    grid-area: userEmotion;
    font-size: 14px;
  }
  
  .userMood {
    grid-area: userMood;
    font-size: 14px;
  }
  
  .userLocation {
    font-size: 14px;
    grid-area: userLocation;
  }
  
  .userLikes {
    grid-area: userLikes;
    font-size: 15px;
   
  }
  .likesContainer {
    display: flex;
    align-items: center; /* Vertically aligns the flex items */
    justify-content: flex-start; /* Horizontal alignment */
  }
  .styledSelect {
    margin-left: 35px;
    width: 200px;
    height: 40px;
    font-size: 16px;
    font-family: 'Arial', sans-serif;
    border: 1px solid #000000;
    border-radius: 5px;
    padding: 8px;
    appearance: none;
    background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-down" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"/></svg>') no-repeat;
    background-position: right 12px center;
    background-color: white;
    &:focus {
      outline: none;
      border: 1px solid #007bff;
    }
  }
  .gridList {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 16px;
    
    li {
      background: linear-gradient(to bottom, var(--sidebar-bg-color), var(--sidebar-bg-color-darker));
      padding: 5px;
      border-radius: 10px; // Rounded corners
      text-align: center; // Centered text
      box-shadow: 0 4px 8px rgba(0,0,0,0.1); // Minimal shadow for a subtle 3D effect
    }
  }
  .separator {
    border-top: 1px solid #ccc; // Light gray line
    margin-top: 16px; // Space above the line
    margin-bottom: 16px; // Space below the line
  }

  .slide-in-class {
    /* Define your slide-in animation here */
    animation: slide-in 1s ease-in-out;
  }
  
  .fadeInFromSide {
    animation: fadeInFromSide 1s ease-in-out;
  }
  
  @keyframes fadeInFromSide {
    0% {
      opacity: 0;
      transform: translateX(-50px);
    }
    100% {
      opacity: 1;
      transform: translateX(0);
    }
  }
  .transparentButton {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0;
    margin: 0;
    outline: none;
    width: 30px;
    height: 30px;
    
  }
  .transparentButton img, .transparentButton svg { 
    /* apply filter to the icon */
    filter: var(--icon-filter);
}
  [data-theme="dark"] .transparentButton {
    filter: invert(1);  /* This inverts the colors */
}











  // THEME TOGGLE
  .themeToggle {
    left: 200px;
    display: flex;
    align-items: center;
    position: relative;
    width: 50px;
    height: 24px;
    background-color: grey;
    border-radius: 12px;
    cursor: pointer;
  }
  
  .themeToggle:before {
    content: "";
    position: absolute;
    width: 24px;
    height: 24px;
    left: 0;
    top: 0;
    background-color: white;
    border-radius: 50%;
    transition: all 0.3s;
  }
  
  .themeToggle.dark:before {
    left: 26px;
  }
  
  .themeToggle .icon {
    position: absolute;
    width: 16px;
    height: 16px;
  }
  
  .themeToggle .moon.dark {
    left: auto;
    right: 4px;
    z-index: 1;
  }
  
  .themeToggle .sun.dark {
    right: auto;
    left: 4px;
    z-index: 0;
  }
  
  .themeToggle .moon.light {
    left: 4px;
    right: auto;
    z-index: 0;
  }
  
  .themeToggle .sun.light {
    right: 4px;
    left: auto;
    z-index: 1;
  }
  
  .dark:before {
    left: 26px;
  }
  
}



@media (max-width: 1560px) {
  .rightSidebar {
      display: none;
  }
}
// SCROLLBAR

// searchbar 

.searchContainer {
  position: relative;
  display: flex;
  align-items: center;
  border-radius: 20px;
  background-color: linear-gradient(to bottom, var(--sidebar-bg-color), var(--sidebar-bg-color-darker)); // Use variables or direct color values
}
.searchIcon {
  position: absolute;
  left: 10px;
  top: 30px;
  color: inherit;
}
.iconDark {
  color: linear-gradient(to bottom, var(--sidebar-bg-color), var(--sidebar-bg-color-darker)); // Define these variables based on your theme
}
.iconLight {
  color: linear-gradient(to bottom, var(--sidebar-bg-color), var(--sidebar-bg-color-darker));
}
.searchInput {
  width: 100%;
  padding: 8px 8px 8px 35px; // Adjust left padding to make space for the icon
  border: none;
  border-radius: 20px;
  background-color: transparent;
  color: inherit;

  &:focus {
    outline: none;
  }
}
.inputDark {
  background-color: linear-gradient(to bottom, var(--sidebar-bg-color), var(--sidebar-bg-color-darker));
}

.inputLight {
  background-color: linear-gradient(to bottom, var(--sidebar-bg-color), var(--sidebar-bg-color-darker));
}
.searchDropdown {
  position: absolute;
  top: calc(100% - 100px);
  left: 0;
  width: 100%; 
  background-color: rgb(30, 39, 50);
  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1); 
  z-index: 1000; 
  max-height: 300px; 
  overflow-y: auto; 
  border-radius: 4px; 
  padding: 8px 0;
  min-width: 250px;
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 8px;
  li {
    padding: 10px 20px !important;  // Adds padding to each item for better clickability
    color: white; // Set the text color that contrasts with the background
    cursor: pointer; // Indicates that items are clickable
    font-size: 16px !important;
    &:hover {
      background-color: rgba(255, 255, 255, 0.1); // Slight highlight on hover
    }
  }
}